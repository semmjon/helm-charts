# Default values for quickwit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quickwit/quickwit
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: edge

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 0

securityContext:
  runAsNonRoot: false
  runAsUser: 0

# Additional global env (searcher + indexer)
environment: {}
  # KEY: VALUE

searcher:
  replicaCount: 3

  # Extra env for searcher
  extraEnv: {}
    # KEY: VALUE

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## Pod distruption budget
  podDisruptionBudget: {}
    # maxUnavailable: 1
    # minAvailable: 2

  persistentVolume:
    enabled: true
    storage: "1Gi"
    # storageClass: ""

  updateStrategy: {}
    # type: RollingUpdate

  livenessProbe:
    httpGet:
      path: /
      port: http

  readinessProbe:
    httpGet:
      path: /
      port: http

indexer:

  # Extra env for indexer
  extraEnv: {}
    # KEY: VALUE

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## Pod distruption budget
  podDisruptionBudget: {}
    # maxUnavailable: 1
    # minAvailable: 2

  updateStrategy: {}
    # type: RollingUpdate

  livenessProbe:
    httpGet:
      path: /
      port: http

  readinessProbe:
    httpGet:
      path: /
      port: http


# Quickwit configuration
config:
  postgres:
    host: "postgresql.postgresql.svc.cluster.local"
    port: "5432"
    database: metastore
    username: metastore
    password: ""
  s3:
    endpoint: ""
    region: ""
    access_key: ""
    secret_key: ""
  default_index_root_uri: s3://quickwit/indexes
  # Indexer settings
  indexer:
    split_store_max_num_bytes: 200G
    split_store_max_num_splits: 10000
  # Searcher settings
  searcher:
    fast_field_cache_capacity: 10G
    split_footer_cache_capacity: 1G
    max_num_concurrent_split_streams: 100  
  #

indexConfigurationFiles: []
  # - name: wikipedia-index-config.yaml
  #   data: 
  #     #
  #     # Index config file for wikipedia dataset.
  #     #
  #     version: 0
  #     index_id: wikipedia
  #     doc_mapping:
  #       field_mappings:
  #         - name: title
  #           type: text
  #           tokenizer: default
  #           record: position
  #           stored: true
  #         - name: body
  #           type: text
  #           tokenizer: default
  #           record: position
  #           stored: true
  #         - name: url
  #           type: text
  #           tokenizer: raw

  #     search_settings:
  #       default_search_fields: [title, body]
  # - name: gh-archive.yaml
  #   source: kafka-gh-archive.yaml
  #   data: 
  #     #
  #     # Index config file for gh-archive dataset.
  #     #
  #     version: 0
  #     index_id: gh-archive
  #     doc_mapping:
  #       field_mappings:
  #         - name: id
  #           type: text
  #           tokenizer: raw
  #         - name: type
  #           type: text
  #           fast: true
  #           tokenizer: raw
  #         - name: public
  #           type: u64
  #           fast: true
  #         - name: payload
  #           type: json
  #           tokenizer: default
  #         - name: org
  #           type: json
  #           tokenizer: default
  #         - name: repo
  #           type: json
  #           tokenizer: default
  #         - name: actor
  #           type: json
  #           tokenizer: default
  #         - name: other
  #           type: json
  #           tokenizer: default
  #         - name: created_at
  #           type: i64
  #           fast: true

  #     indexing_settings:
  #       timestamp_field: created_at

  #     search_settings:
  #       default_search_fields: []

sourceConfigurationFiles: []
  # - name: kafka-gh-archive.yaml
  #   data: 
  #     #
  #     # Kafka source config file.
  #     #
  #     source_id: kafka-source
  #     source_type: kafka
  #     params:
  #       topic: gh-archive
  #       client_params:
  #         bootstrap.servers: kafka.kafka.svc.cluster.local:9094
  #         group.id: sgeist.console
  #         security.protocol: SASL_PLAINTEXT
  #         sasl.mechanism: PLAIN
  #         sasl.username: user
  #         sasl.password: password

# Prometheus metrics
serviceMonitor:
  enabled: false
  interval: 60s
  scrapeTimeout: 10s
  metricRelabelings: []
  #  - action: replace
  #    regex: quickwit-(.*)
  #    replacement: $1
  #    sourceLabels: [cluster]
  #    targetLabel: qw_cluster
  #  - action: labeldrop
  #    regex: (endpoint|cluster)
  relabelings: []
  #  - sourceLabels: [__meta_kubernetes_pod_node_name]
  #    targetLabel: instance

# Prometheus Operator alertmanager alerts
prometheusRule:
  enabled: false
  rules: []
  #  - alert: Example
  #    expr: metric == 1
  #    for: 1m
  #    labels:
  #      severity: warning

service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
